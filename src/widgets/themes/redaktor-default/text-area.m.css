.root { composes: root from './text-input.m.css'; }
.wrapper { composes: wrapper from './text-input.m.css'; }
.inner { composes: inner from './text-input.m.css'; }
.input { composes: input from './text-input.m.css'; }
.border { composes: border from './text-input.m.css'; }
.parentSchema { composes: parentSchema from './text-input.m.css'; }
.hasSchema { composes: hasSchema from './text-input.m.css'; }
.prefix { composes: prefix from './text-input.m.css'; }
.suffix { composes: suffix from './text-input.m.css'; }
.hasPrefix { composes: hasPrefix from './text-input.m.css'; }
.hasSuffix { composes: hasSuffix from './text-input.m.css'; }
.responsive { composes: responsive from './text-input.m.css'; }
.enabled { composes: enabled from './text-input.m.css'; }
.disabled { composes: disabled from './text-input.m.css'; }
.valid { composes: valid from './text-input.m.css'; }
.invalid { composes: invalid from './text-input.m.css'; }
.slideLabel { composes: slideLabel from './text-input.m.css'; }
.staticLabel { composes: staticLabel from './text-input.m.css'; }
.square { composes: square from './_ui.m.css'; }
.absolute { composes: absolute from './_ui.m.css'; }

.root.expand .wrapper {
  height: auto;
  margin-bottom: var(--wrapper-b);
}
.root.fixed .wrapper {
  height: auto;
  margin-bottom: var(--wrapper-max-b)
}
.root.expand textarea.input {
  overflow: hidden;
  resize: none;
}
.root .input {
  /* no resize transition */
  position: relative;
  transition: none;
  padding-top: calc(var(--wrapper-max-b) + var(--padding-top));
  padding-bottom: 0;
}
.border {
	transition: background-color var(--ui-dpd-0) var(--ui-easing) 0ms;
	bottom: calc(var(--ui-border-width-emphasized) * -1);
}
